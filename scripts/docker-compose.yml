version: '3'
services:
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${POOL}/containers/portainer:/data
      - ${POOL}/containers/shared:/shared
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /portainer"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
      - ${POOL}/containers/plex:/config
      - ${POOL}/media:/data
    network_mode: host
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - HOSTNAME="Olympus Plex"
      - ADVERTISE_IP="http://10.240.0.4:32400/"
  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    volumes:
      - ${POOL}/containers/tautulli:/config
      - ${POOL}/containers/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/plex_logs:ro
    ports:
      - 8181:8181
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    container_name: sabnzbd
    volumes:
      - ${POOL}/containers/sabnzbd:/config
      - ${POOL}/media/downloads/complete:/downloads
      - ${POOL}/media/downloads/incomplete:/incomplete-downloads
    ports:
      - 8081:8080
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    volumes:
      - ${POOL}/containers/sonarr:/config
      - ${POOL}/media/tvseries:/tv
      - ${POOL}/media/downloads/complete:/downloads
    ports:
      - 8989:8989
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - ${POOL}/containers/radarr:/config
      - ${POOL}/media/movies:/movies
      - ${POOL}/media/downloads/complete:/downloads
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    restart: always
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    volumes:
      - ${POOL}/media/music:/music
      - ${POOL}/containers/lidarr:/config
      - ${POOL}/media/downloads/complete/music:/downloads
    ports:
      - 8686:8686
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
  ombi:
    container_name: ombi
    restart: always
    image: linuxserver/ombi
    volumes:
      - ${POOL}/containers/ombi:/config
      - ${POOL}/containers/shared:/shared
    ports:
      - "3579:3579"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=ombi"
      - "traefik.frontend.rule=Host:ombi.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /ombi"
      - "traefik.port=3579"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    command: --schedule "0 0 4 * * *" --cleanup
  mariadb:
    container_name: mariadb
    image: mariadb
    hostname: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    ports:
      - 3306:3306
    networks:
      - traefik_proxy
      - backend
    volumes:
      - ${POOL}/containers/mariadb/db:/var/lib/mysql
      - ${POOL}/containers/mariadb:/config
      - ${POOL}/containers/shared:/shared
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${HTTP_USERNAME}
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
  phpmyadmin:
    hostname: phpmyadmin
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    links:
      - mariadb:db
    ports:
      - 8083:80
    environment:
      - PMA_HOST=mariadb
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      - traefik_proxy
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=pma"
      - "traefik.frontend.rule=Host:pma.${DOMAINNAME}"
      - "traefik.port=80"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  nextcloud:
    container_name: nextcloud
    image: nextcloud
    restart: always
    links:
      - mariadb
    volumes:
      - ${POOL}/containers/nextcloud:/config
      - ${POOL}/containers/nextcloud/www:/var/www/html
      - ${POOL}/media:/data
      - ${POOL}/containers/shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud_admin
      - MYSQL_PASSWORD=${CLOUDDB_PASS}
      - MYSQL_HOST=${MYSQL_HOST}
      - NEXTCLOUD_ADMIN_USER=${HTTP_USERNAME}
      - NEXTCLOUD_ADMIN_PASSWORD=${HTTP_PASSWORD_PLAIN}
      - TZ=${TZ}
    networks:
      - traefik_proxy
      - backend
    ports:
      - 8082:80
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nextcloud"
      - "traefik.frontend.rule=Host:nextcloud.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /nextcloud"
      - "traefik.port=8082"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  traefik:
    image: traefik
    hostname: traefik
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - backend
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${POOL}/containers/traefik:/etc/traefik
      - ${POOL}/containers/shared:/shared
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - USER_UID=${PUID}
      - USER_GID=${PGID}
      - DB_TYPE=mysql
      - DB_HOST=${MYSQL_HOST}
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=${HTTP_PASSWORD}
    restart: always
    networks:
      - backend
    volumes:
      - ${POOL}/containers/gitea:/data
    ports:
      - "8084:3000"
      - "222:22"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=gitea"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.rule=Host:git.${DOMAINNAME}"
      - "traefik.port=3000"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
#   gitlab:
#    image: 'gitlab/gitlab-ce:latest'
#    container_name: gitlab
#    restart: always
#    hostname: 'gitlab.${DOMAINNAME}'
#    environment:
#      GITLAB_OMNIBUS_CONFIG: |
#        external_url 'https://gitlab.${DOMAINNAME}'
#        GITLAB_ROOT_PASSWORD '${MYSQL_ROOT_PASSWORD}'
#    labels:
#      - "traefik.enable=true"
#      - "traefik.backend=gitlab"
#      - "traefik.frontend.rule=Host:gitlab.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /gitlab"
#      - "traefik.port=10080"
#      - "traefik.docker.network=traefik_proxy"
#      - "traefik.frontend.headers.SSLRedirect=true"
#      - "traefik.frontend.headers.STSSeconds=315360000"
#      - "traefik.frontend.headers.browserXSSFilter=true"
#      - "traefik.frontend.headers.contentTypeNosniff=true"
#      - "traefik.frontend.headers.forceSTSHeader=true"
#      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
#      - "traefik.frontend.headers.STSIncludeSubdomains=true"
#      - "traefik.frontend.headers.STSPreload=true"
#      - "traefik.frontend.headers.frameDeny=true"
#    networks:
#      - backend
#      - traefik_proxy
#    ports:
#      - '10080:80'
#      - '10443:443'
#      - '10022:22'
#    volumes:
#      - '${POOL}/containers/gitlab/config:/etc/gitlab'
#      - '${POOL}/containers/gitlab/logs:/var/log/gitlab'
#      - '${POOL}/containers/gitlab/data:/var/opt/gitlab'
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  backend:
    driver: bridge
